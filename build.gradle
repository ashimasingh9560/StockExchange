plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'org.openapi.generator' version '4.1.0'

    // These must appear after other plugins to ensure configuration is applied correctly
    id 'zeni.plato-jvm-base' version '4.0.2'

    // Helper for checking if newer versions of dependencies exist
    id 'com.github.ben-manes.versions' version '0.22.0'
}

group 'stock'
description 'stock-exch-api'
version '1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8
sourceSets {
    acceptanceTest {
        resources {
            srcDirs 'src/acceptanceTest/resources'
        }
        java {
            srcDirs 'src/acceptanceTest/java'
        }
    }
}

//======================= Dependencies =============================================
configurations.all {
    exclude group: 'junit'
}

def testLibraries = [
        'org.springframework.boot:spring-boot-starter-test',
        'org.junit.jupiter:junit-jupiter',
        'org.mockito:mockito-junit-jupiter',
        // Because life is too short to generate random Java beans by hand..
        // https://github.com/j-easy/easy-random
        'org.jeasy:easy-random-core:4.0.0',
        'org.assertj:assertj-core'
]




dependencies {
    acceptanceTestCompile "io.github.benas:random-beans:${randomBeansVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompile "io.github.benas:random-beans:${randomBeansVersion}"
    testCompile 'org.mockito:mockito-junit-jupiter'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    implementation(enforcedPlatform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES))
    implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'



    // Swagger Annotation dependencies
    implementation 'io.swagger:swagger-annotations:1.5.21'

    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    // --- Test Dependencies ---
    testImplementation testLibraries

    acceptanceTestImplementation(enforcedPlatform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES))
    acceptanceTestImplementation testLibraries
}

defaultTasks 'build'




task openApiGenerateClean(group: 'OpenAPI Tools', type: Delete, description: 'Delete the directory that OPENApi generator uses') {
    delete 'src/main/generated'
}


def openApiOutputDir = "$projectDir/src/main/generated".toString()
openApiGenerate {
    generatorName = "spring"
    outputDir = openApiOutputDir
    inputSpec = "$projectDir/src/main/resources/openapi/api.yml".toString()
    systemProperties = [
            apis           : '',
            models         : '',
            supportingFiles: 'ApiUtil.java'
    ]

}




task acceptanceTest(type: Test) {
    group 'verification'

    classpath = sourceSets.acceptanceTest.runtimeClasspath
    classpath += sourceSets.acceptanceTest.resources
    testClassesDirs = sourceSets.acceptanceTest.output.classesDirs

    jacoco {
        enabled = false
    }

    systemProperty "spring.profiles.active", findProperty("spring.profiles.active")
    systemProperty "test.rootUrl", findProperty("test.rootUrl")
}

acceptanceTest.dependsOn compileAcceptanceTestJava

task jacocoAcceptanceTestReport {
}



